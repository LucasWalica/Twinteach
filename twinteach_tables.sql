create table alumno(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CORREO VARCHAR(40) NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL
    CONTRASEÃ‘A VARCHAR(50) NOT NULL,
)

CREATE TABLE PROFESOR(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CORREO VARCHAR(40) NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL
)

create table aceptar_alumno(
    ID int PRIMARY key AUTO_INCREMENT,
    ID_ALUMNO INT FOREIGN key (ID_ALUMNO) REFERENCES alumno(ID),
    ID_Profesor int FOREIGN key(ID_Profesor) REFERENCES PROFESOR(id),
    alumno_aceptado int check(alumno_aceptado==1 or alumno_aceptado==2)
)

CREATE TABLE COFRE(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    TIPO_COFRE VARCHAR(20) NOT NULL,
    RECOMPENSAS_ORO INT NOT NULL,
    NUM_CHIBIS INT NOT NULL,
    NUM_GEMAS INT NOT NULL, 
    NUM_RUNAS INT NOT NULL,
)
-- (FLOOR(RAND() * 20) + 1); (NUMERO RANDOM DE 1 A 20) EJEMPLO

create table cofre_alumno(
    ID_cofre_alumno int PRIMARY key AUTO_INCREMENT,
    ID_ALUMNO_CLASE int FOREIGN key (ID_ALUMNO_CLASE) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE) not null,
    ID_cofre int FOREIGN key (ID_cofre) REFERENCES COFRE(ID) not null
)

--relacion con un regalo entre medias->
CREATE TABLE PROF_PUNTUAR(
    ID_PUNTUAJE INT PRIMARY KEY PRIMARY KEY,
    ID_PROFESOR INT,
    ID_ALUMNO_CLASE INT, 
    ID_COFRE INT,
    Nota INT,
    FOREIGN KEY (ID_PROFESOR) REFERENCES PROFESOR(ID_PROFESOR),
    FOREIGN key (ID_ALUMNO_CLASE) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE),
    FOREIGN key (ID_COFRE) REFERENCES COFRE(ID)
)


CREATE TABLE CLASE(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(30) NOT NULL,
    ID_PROFESOR INT,
    FOREIGN KEY(ID_PROFESOR) REFERENCES PROFESOR(ID),
    -- boolean 0=false, 1=true
    PERIODO_PAZ tinyint(1) NOT NULL DEFAULT=0 
)

CREATE TABLE ALUMNO_CLASE(
    ID_ALUMNO_CLASE INT PRIMARY KEY AUTO_INCREMENT,
    ID_ALUMNO INT FOREIGN KEY(ID_ALUMNO) REFERENCES alumno(ID),
    ID_CLASE INT FOREIGN KEY(ID_CLASE) REFERENCES CLASE(ID),
    ID_PROFESOR INT FOREIGN KEY(ID_PROFESOR) REFERENCES PROFESOR(ID),
    CODICIA INT UNSIGNED DEFAULT 0,
    DEFENSA INT UNSIGNED DEFAULT 0,
    MONEDAS INT UNSIGNED DEFAULT 0,
    ATAQUE INT UNSIGNED DEFAULT 0,
    PUNTOS_SOFT_SKILLS INT UNSIGNED DEFAULT 0
)

CREATE TABLE ATACAR(
    ID_ATAQUE INT PRIMARY KEY AUTO_INCREMENT,
    ID_ATACANTE INT FOREIGN KEY(ID_ATACANTE) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE),  
    ID_DEFENSOR INT FOREIGN KEY(ID_ATACANTE) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE)
)

CREATE TABLE PUNTUAR(
    ID_PUNTUAJE INT PRIMARY KEY AUTO_INCREMENT,
    ID_PUNTUADOR INT FOREIGN KEY(ID_PUNTUADOR) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE),  
    ID_PUNTUADO INT FOREIGN KEY(ID_PUNTUADO) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE),
    SOFTSKILL VARCHAR(40) NOT NULL 
    CHECK(SOFTSKILL="Responsabilidad" or
          SOFTSKILL="Cooperacion" or 
          SOFTSKILL="Autonomia_e_iniciativa" or 
          SOFTSKILL="Gestion_emocional" or 
          SOFTSKILL="Habilidad_de_pensamiento"),
    CANTIDAD INT CHECK(CANTIDAD BETWEEN 1 AND 3)
)

-- MONIGOTES

CREATE TABLE DRAGON(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_PROPIETARIO INT ,
    FOREIGN KEY(ID_PROPIETARIO) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE),
    NOMBRE VARCHAR(30) NOT NULL,
    ATAQUE INT CHECK(ATAQUE>=0),
    DEFENSA INT CHECK(DEFENSA>=0),
    DESCRIPCION VARCHAR(50),
    NIVEL INT CHECK(NIVEL>=0)
)

CREATE TABLE MASCOTAS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_PROPIETARIO INT ,
    FOREIGN KEY(ID_PROPIETARIO) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE),
    NOMBRE VARCHAR(30) NOT NULL,
    ATAQUE INT CHECK(ATAQUE>=0),
    DEFENSA INT CHECK(DEFENSA>=0),
    DESCRIPCION VARCHAR(50),
    HABILIDAD_ESPECIAL VARCHAR(100)
)

CREATE TABLE CHIBIS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_PROPIETARIO INT ,
    FOREIGN KEY(ID_PROPIETARIO) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE),
    NOMBRE VARCHAR(30) NOT NULL,
    ATAQUE INT CHECK(ATAQUE>=0),
    DEFENSA INT CHECK(DEFENSA>=0),
    DESCRIPCION VARCHAR(50),
    FAMILIA INT CHECK (FAMILIA BETWEEN 1 AND 8)
)

-- FIN MONIGOTES

--EDIFICIOS

--  ORO_DIA NIVEL/GEMAS_DIAS * 14 POR EJEMPLO
--  MAX ORO/ MAX GEMAS SAME
CREATE TABLE EDIFICIOS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_ALUMNO_PROPIETARIO INT ,
    FOREIGN KEY (ID_ALUMNO_PROPIETARIO) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE),
    TIPO INT CHECK(TIPO >= 1 OR TIPO == 2),
    NIVEL INT CHECK (NIVEL BETWEEN 1 AND 20)
)

CREATE TABLE OBJETOS_TIENDA(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_PROPIETARIO INT, 
    FOREIGN KEY(ID_PROPIETARIO) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE),
    COSTE INT CHECK(COSTE>0),
    FUNCION VARCHAR(200)
)

CREATE TABLE CASILLAS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    N_FILA INT CHECK(N_FILA>=0 AND N_FILA<=200),
    N_CASILLA INT CHECK(N_CASILLA>=0 AND N_CASILLA<=200),
    ESTRUCUTURA INT CHECK(ESTRUCUTURA>=1 AND ESTRUCUTURA<=10),
    ID_CLASE INT FOREIGN KEY(ID_CLASE) REFERENCES CLASE(ID),
    ALUMNO_POSEEDOR INT FOREIGN KEY(ALUMNO_POSEEDOR) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE)
)


CREATE TABLE INVADIR(
    ID_IVASION INT PRIMARY KEY, 
    ID_INVASOR INT FOREIGN KEY(ID_INVASOR) REFERENCES ALUMNO_CLASE(ID_ALUMNO_CLASE),
    ID_INVADIDO INT FOREIGN KEY(ID_INVADIDO) REFERENCES ALUMNO_CLASE(ID_INVADIDO),
    ID_CASILLA INT FOREIGN KEY(ID_CASILLA) REFERENCES CASILLAS(ID)
)


CREATE TABLE NOTIFICACIONES(
    ID_NOTIFICACION INT PRIMARY KEY, 
    ID_Alumno_clase int FOREIGN key (ALUMNO_CLASE) REFERENCES ALUMNO_CLASE(ID_Alumno_clase) NOT NULL,
    INVASION_ref INT FOREIGN key(INVASION_ref) REFERENCES INVADIR(ID_IVASION),
    ATAQUE_ref INT FOREIGN key(ATAQUE_ref) REFERENCES ATACAR(ID_ATAQUE),
    PUNTUA_ref INT FOREIGN key(PUNTUA_ref) REFERENCES PUNTUAR(ID_PUNTUAJE),
    PROF_PUNTUA_ref INT FOREIGN key(PROF_PUNTUA_ref) REFERENCES PROF_PUNTUAr(ID_PUNTUAJE)
)

